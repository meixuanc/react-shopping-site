{"ast":null,"code":"import _objectSpread from \"/Users/meixuanchen/Desktop/React/react-shopping-site/online-shop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBgwFW49_T24Sl1n3phWZmNwqDl21ZZcHw',\n  authDomain: 'dragon-db.firebaseapp.com',\n  databaseURL: 'https://dragon-db.firebaseio.com',\n  projectId: 'dragon-db',\n  storageBucket: '',\n  messagingSenderId: '642325823526',\n  appId: '1:642325823526:web:aa0a033e5c7a9261'\n};\nfirebase.initializeApp(config);\n\nconst createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: 'select_account'\n});\n\nconst signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport { auth, firestore, provider, signInWithGoogle, createUserProfileDocument };\nexport default firebase;","map":{"version":3,"sources":["/Users/meixuanchen/Desktop/React/react-shopping-site/online-shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,2BAFD;AAGXC,EAAAA,WAAW,EAAE,kCAHF;AAIXC,EAAAA,SAAS,EAAE,WAJA;AAKXC,EAAAA,aAAa,EAAE,EALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;;AAEA,MAAMS,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAClE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAMH,KAPD,CAOE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CAxBD;;AA0BA,MAAMgB,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACA,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACA,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B;;AACA,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;;AAEA,SAASD,IAAT,EAAef,SAAf,EAA0BgB,QAA1B,EAAoCI,gBAApC,EAAsDxB,yBAAtD;AACA,eAAeV,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: 'AIzaSyBgwFW49_T24Sl1n3phWZmNwqDl21ZZcHw',\n    authDomain: 'dragon-db.firebaseapp.com',\n    databaseURL: 'https://dragon-db.firebaseio.com',\n    projectId: 'dragon-db',\n    storageBucket: '',\n    messagingSenderId: '642325823526',\n    appId: '1:642325823526:web:aa0a033e5c7a9261'\n};\n\nfirebase.initializeApp(config);\n\nconst createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n};\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ promt: 'select_account' });\nconst signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport { auth, firestore, provider, signInWithGoogle, createUserProfileDocument };\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}