{"ast":null,"code":"var _jsxFileName = \"/Users/meixuanchen/Desktop/React/react-shopping-site/client/src/components/stripe-button/StripeButton.component.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport dragon_icon from \"../../assets/dragon.svg\";\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\nimport axios from 'axios';\n\nconst StripeButton = ({\n  price,\n  cartItems,\n  clearItem\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_kOkZcMWedcfIHNfWob9ALgZW00vdWrmkXz';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Payment Successful');\n      cartItems.map(cartItem => clearItem(cartItem));\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment. Please sure you use the provided credit card');\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Dragon Clothing Co.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: dragon_icon,\n    description: \"Your total is $\".concat(price),\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(StripeButton);","map":{"version":3,"sources":["/Users/meixuanchen/Desktop/React/react-shopping-site/client/src/components/stripe-button/StripeButton.component.js"],"names":["React","StripeCheckout","connect","clearItemFromCart","axios","StripeButton","price","cartItems","clearItem","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","map","cartItem","catch","error","console","log","JSON","parse","dragon_icon","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACtD,QAAMC,cAAc,GAAGH,KAAK,GAAG,GAA/B;AACA,QAAMI,cAAc,GAAG,4CAAvB;;AACA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBR,IAAAA,KAAK,CAAC;AACFS,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAQKK,IARL,CAQWC,QAAD,IAAc;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAZ,MAAAA,SAAS,CAACa,GAAV,CAAeC,QAAD,IAAcb,SAAS,CAACa,QAAD,CAArC;AACH,KAXL,EAYKC,KAZL,CAYYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAJ,MAAAA,KAAK,CAAC,oFAAD,CAAL;AACH,KAfL;AAgBH,GAjBD;;AAkBA,SACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,qBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAES,WALX;AAMI,IAAA,WAAW,2BAAoBtB,KAApB,CANf;AAOI,IAAA,MAAM,EAAEG,cAPZ;AAQI,IAAA,UAAU,EAAC,SARf;AASI,IAAA,KAAK,EAAEE,OATX;AAUI,IAAA,SAAS,EAAED,cAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAcH,CAnCD;;AAqCA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACtCtB,EAAAA,SAAS,EAAGuB,IAAD,IAAUD,QAAQ,CAAC3B,iBAAiB,CAAC4B,IAAD,CAAlB;AADS,CAAf,CAA3B;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCxB,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport dragon_icon from '../../assets/dragon.svg';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart } from '../../redux/cart/cart.actions';\nimport axios from 'axios';\n\nconst StripeButton = ({ price, cartItems, clearItem }) => {\n    const priceForStripe = price * 100;\n    const publishableKey = 'pk_test_kOkZcMWedcfIHNfWob9ALgZW00vdWrmkXz';\n    const onToken = (token) => {\n        axios({\n            url: 'payment',\n            method: 'post',\n            data: {\n                amount: priceForStripe,\n                token\n            }\n        })\n            .then((response) => {\n                alert('Payment Successful');\n                cartItems.map((cartItem) => clearItem(cartItem));\n            })\n            .catch((error) => {\n                console.log('Payment error: ', JSON.parse(error));\n                alert('There was an issue with your payment. Please sure you use the provided credit card');\n            });\n    };\n    return (\n        <StripeCheckout\n            label=\"Pay Now\"\n            name=\"Dragon Clothing Co.\"\n            billingAddress\n            shippingAddress\n            image={dragon_icon}\n            description={`Your total is $${price}`}\n            amount={priceForStripe}\n            panelLabel=\"Pay Now\"\n            token={onToken}\n            stripeKey={publishableKey}\n        />\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearItem: (item) => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(StripeButton);\n"]},"metadata":{},"sourceType":"module"}